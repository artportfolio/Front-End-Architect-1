{"ast":null,"code":"import _objectSpread from \"/Users/atb/Dev/publicRepos/Front-End-Architect-1/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { GET_PROFILE_WITH_POSTS_START, GET_PROFILE_WITH_POSTS_SUCCESS, GET_PROFILE_WITH_POSTS_FAILURE, GET_USER_POSTS_START, GET_USER_POSTS_SUCCESS, GET_USER_POSTS_FAILURE, CREATE_POST_START, CREATE_POST_SUCCESS, CREATE_POST_FAILURE, GET_ALL_POSTS_START, GET_ALL_POSTS_SUCCESS, GET_ALL_POSTS_FAILURE, GET_POST_START, GET_POST_SUCCESS, GET_POST_FAILURE, EDIT_POST_START, EDIT_POST_SUCCESS, EDIT_POST_FAILURE, DELETE_POST_START, DELETE_POST_SUCCESS, DELETE_POST_FAILURE } from \"../../store/actions/types\";\nimport { getPost } from \"../actions/postActions\";\nvar initialState = {\n  posts: [],\n  singlePost: [],\n  postsMessage: \"\",\n  postToEdit: [],\n  editedPost: []\n};\nexport default function post() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_PROFILE_WITH_POSTS_START:\n      return _objectSpread({}, state, {\n        postsMessage: \"Getting profile and posts...\"\n      });\n\n    case GET_PROFILE_WITH_POSTS_SUCCESS:\n      return _objectSpread({}, state, {\n        posts: action.payload,\n        postsMessage: \"Got profile and posts!\"\n      });\n\n    case GET_PROFILE_WITH_POSTS_FAILURE:\n      return _objectSpread({}, state, {\n        postsMessage: \"Failed to get profile and posts!\"\n      });\n\n    case GET_USER_POSTS_START:\n      return _objectSpread({}, state, {\n        postsMessage: \"Getting user posts...\"\n      });\n\n    case GET_USER_POSTS_SUCCESS:\n      return _objectSpread({}, state, {\n        posts: action.payload,\n        postsMessage: \"Got user posts!\"\n      });\n\n    case GET_USER_POSTS_FAILURE:\n      return _objectSpread({}, state, {\n        postsMessage: \"Failed to get user posts!\"\n      });\n\n    case CREATE_POST_START:\n      return _objectSpread({}, state, {\n        postsMessage: \"Creating post...\"\n      });\n\n    case CREATE_POST_SUCCESS:\n      return _objectSpread({}, state, {\n        posts: action.payload,\n        postsMessage: \"Created post!\"\n      });\n\n    case CREATE_POST_FAILURE:\n      return _objectSpread({}, state, {\n        postsMessage: \"Failed to create post!\"\n      });\n\n    case GET_ALL_POSTS_START:\n      return _objectSpread({}, state, {\n        postsMessage: \"Getting ALL posts...\"\n      });\n\n    case GET_ALL_POSTS_SUCCESS:\n      return _objectSpread({}, state, {\n        posts: action.payload,\n        postsMessage: \"Got ALL the posts!\"\n      });\n\n    case GET_ALL_POSTS_FAILURE:\n      return _objectSpread({}, state, {\n        postsMessage: \"Failed to get posts!\"\n      });\n\n    case GET_POST_START:\n      return _objectSpread({}, state, {\n        postsMessage: \"Getting single post...\"\n      });\n\n    case GET_POST_SUCCESS:\n      return _objectSpread({}, state, {\n        singlePost: action.payload,\n        postsMessage: \"Got single post!\"\n      });\n\n    case GET_POST_FAILURE:\n      return _objectSpread({}, state, {\n        postsMessage: \"Failed to get post!\"\n      });\n\n    case EDIT_POST_START:\n      return _objectSpread({}, state, {\n        postToEdit: action.payload.id,\n        postsMessage: \"Editing post...\"\n      });\n\n    case EDIT_POST_SUCCESS:\n      return _objectSpread({}, state, {\n        // posts: action.payload,\n        postsMessage: \"Edited post!\"\n      });\n\n    case EDIT_POST_FAILURE:\n      return _objectSpread({}, state, {\n        postsMessage: \"Failed to edit post!\"\n      });\n\n    case DELETE_POST_START:\n      return _objectSpread({}, state, {\n        postsMessage: \"Deleting post...\"\n      });\n\n    case DELETE_POST_SUCCESS:\n      return _objectSpread({}, state, {\n        // posts: action.payload,\n        postsMessage: \"Deleted post!\"\n      });\n\n    case DELETE_POST_FAILURE:\n      return _objectSpread({}, state, {\n        postsMessage: \"Failed to delete post!\"\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/atb/Dev/publicRepos/Front-End-Architect-1/client/src/store/reducers/postReducer.js"],"names":["GET_PROFILE_WITH_POSTS_START","GET_PROFILE_WITH_POSTS_SUCCESS","GET_PROFILE_WITH_POSTS_FAILURE","GET_USER_POSTS_START","GET_USER_POSTS_SUCCESS","GET_USER_POSTS_FAILURE","CREATE_POST_START","CREATE_POST_SUCCESS","CREATE_POST_FAILURE","GET_ALL_POSTS_START","GET_ALL_POSTS_SUCCESS","GET_ALL_POSTS_FAILURE","GET_POST_START","GET_POST_SUCCESS","GET_POST_FAILURE","EDIT_POST_START","EDIT_POST_SUCCESS","EDIT_POST_FAILURE","DELETE_POST_START","DELETE_POST_SUCCESS","DELETE_POST_FAILURE","getPost","initialState","posts","singlePost","postsMessage","postToEdit","editedPost","post","state","action","type","payload","id"],"mappings":"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","sourcesContent":["import {\n  GET_PROFILE_WITH_POSTS_START,\n  GET_PROFILE_WITH_POSTS_SUCCESS,\n  GET_PROFILE_WITH_POSTS_FAILURE,\n  GET_USER_POSTS_START,\n  GET_USER_POSTS_SUCCESS,\n  GET_USER_POSTS_FAILURE,\n  CREATE_POST_START,\n  CREATE_POST_SUCCESS,\n  CREATE_POST_FAILURE,\n  GET_ALL_POSTS_START,\n  GET_ALL_POSTS_SUCCESS,\n  GET_ALL_POSTS_FAILURE,\n  GET_POST_START,\n  GET_POST_SUCCESS,\n  GET_POST_FAILURE,\n  EDIT_POST_START,\n  EDIT_POST_SUCCESS,\n  EDIT_POST_FAILURE,\n  DELETE_POST_START,\n  DELETE_POST_SUCCESS,\n  DELETE_POST_FAILURE\n} from \"../../store/actions/types\";\n\nimport { getPost } from \"../actions/postActions\";\n\nconst initialState = {\n  posts: [],\n  singlePost: [],\n  postsMessage: \"\",\n  postToEdit: [],\n  editedPost: []\n};\n\nexport default function post(state = initialState, action) {\n  switch (action.type) {\n    case GET_PROFILE_WITH_POSTS_START:\n      return {\n        ...state,\n        postsMessage: \"Getting profile and posts...\"\n      };\n    case GET_PROFILE_WITH_POSTS_SUCCESS:\n      return {\n        ...state,\n        posts: action.payload,\n        postsMessage: \"Got profile and posts!\"\n      };\n    case GET_PROFILE_WITH_POSTS_FAILURE:\n      return {\n        ...state,\n        postsMessage: \"Failed to get profile and posts!\"\n      };\n    case GET_USER_POSTS_START:\n      return {\n        ...state,\n        postsMessage: \"Getting user posts...\"\n      };\n    case GET_USER_POSTS_SUCCESS:\n      return {\n        ...state,\n        posts: action.payload,\n        postsMessage: \"Got user posts!\"\n      };\n    case GET_USER_POSTS_FAILURE:\n      return {\n        ...state,\n        postsMessage: \"Failed to get user posts!\"\n      };\n\n    case CREATE_POST_START:\n      return {\n        ...state,\n        postsMessage: \"Creating post...\"\n      };\n    case CREATE_POST_SUCCESS:\n      return {\n        ...state,\n        posts: action.payload,\n        postsMessage: \"Created post!\"\n      };\n    case CREATE_POST_FAILURE:\n      return {\n        ...state,\n        postsMessage: \"Failed to create post!\"\n      };\n\n    case GET_ALL_POSTS_START:\n      return {\n        ...state,\n        postsMessage: \"Getting ALL posts...\"\n      };\n    case GET_ALL_POSTS_SUCCESS:\n      return {\n        ...state,\n        posts: action.payload,\n        postsMessage: \"Got ALL the posts!\"\n      };\n    case GET_ALL_POSTS_FAILURE:\n      return {\n        ...state,\n        postsMessage: \"Failed to get posts!\"\n      };\n\n    case GET_POST_START:\n      return {\n        ...state,\n        postsMessage: \"Getting single post...\"\n      };\n    case GET_POST_SUCCESS:\n      return {\n        ...state,\n        singlePost: action.payload,\n        postsMessage: \"Got single post!\"\n      };\n    case GET_POST_FAILURE:\n      return {\n        ...state,\n        postsMessage: \"Failed to get post!\"\n      };\n\n    case EDIT_POST_START:\n      return {\n        ...state,\n        postToEdit: action.payload.id,\n        postsMessage: \"Editing post...\"\n      };\n    case EDIT_POST_SUCCESS:\n      return {\n        ...state,\n        // posts: action.payload,\n        postsMessage: \"Edited post!\"\n      };\n    case EDIT_POST_FAILURE:\n      return {\n        ...state,\n        postsMessage: \"Failed to edit post!\"\n      };\n\n    case DELETE_POST_START:\n      return {\n        ...state,\n        postsMessage: \"Deleting post...\"\n      };\n    case DELETE_POST_SUCCESS:\n      return {\n        ...state,\n        // posts: action.payload,\n        postsMessage: \"Deleted post!\"\n      };\n    case DELETE_POST_FAILURE:\n      return {\n        ...state,\n        postsMessage: \"Failed to delete post!\"\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}