{"ast":null,"code":"import _classCallCheck from \"/Users/atb/Dev/publicRepos/Front-End-Architect-1/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/atb/Dev/publicRepos/Front-End-Architect-1/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/atb/Dev/publicRepos/Front-End-Architect-1/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/atb/Dev/publicRepos/Front-End-Architect-1/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/atb/Dev/publicRepos/Front-End-Architect-1/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/atb/Dev/publicRepos/Front-End-Architect-1/client/src/components/PostModal.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { TiHeartOutline, TiHeartFullOutline } from \"react-icons/ti\";\nimport { deletePost, editPost } from \"../store/actions\";\n\nvar PostModal =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PostModal, _React$Component);\n\n  function PostModal(props) {\n    _classCallCheck(this, PostModal);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PostModal).call(this, props));\n  }\n\n  _createClass(PostModal, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      console.log(this.props.src[\"userId\"]);\n\n      if (!this.props.src) {\n        console.log(\"whut\");\n        return null;\n      }\n\n      var parseUsers = function parseUsers() {\n        return _this.props.users.map(function (thing) {\n          return {\n            id: thing.id,\n            username: thing.username,\n            fullName: thing.fullName,\n            userImgUrl: thing.userImgUrl\n          };\n        });\n      };\n\n      var user = localStorage.getItem(\"userId\");\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modal-overlay\",\n        onClick: this.props.closeModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        isOpen: !!this.props.src.imageUrl,\n        className: \"modal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modal-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        className: \"modal-close\",\n        onClick: this.props.closeModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"\\xD7\"), this.props.hasPrev && React.createElement(\"a\", {\n        href: \"#\",\n        className: \"modal-prev\",\n        onClick: this.props.findPrev,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"\\u2039\"), this.props.hasNext && React.createElement(\"a\", {\n        href: \"#\",\n        className: \"modal-next\",\n        onClick: this.props.findNext,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"\\u203A\"), React.createElement(\"button\", {\n        onClick: function onClick(e) {\n          return _this.props.deletePost(_this.props.src.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Delete\"), React.createElement(\"img\", {\n        src: this.props.src.imageUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        className: \"postInfoLine\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, this.artistIndex), React.createElement(\"span\", {\n        className: \"postInfoLine\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, this.props.src.postName), React.createElement(\"span\", {\n        className: \"postInfoLine\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, this.props.src.description), React.createElement(\"span\", {\n        className: \"postInfoLine\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, this.props.src.upvotes === 0 ? React.createElement(TiHeartOutline, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }) : React.createElement(TiHeartFullOutline, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), \"   \".concat(this.props.src.upvotes, \" likes\"))));\n    }\n  }]);\n\n  return PostModal;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    users: state.user.users,\n    user: state.user.user.id\n  };\n};\n\nexport default connect(mapStateToProps, {\n  deletePost: deletePost,\n  editPost: editPost\n})(PostModal);","map":{"version":3,"sources":["/Users/atb/Dev/publicRepos/Front-End-Architect-1/client/src/components/PostModal.js"],"names":["React","connect","TiHeartOutline","TiHeartFullOutline","deletePost","editPost","PostModal","props","console","log","src","parseUsers","users","map","thing","id","username","fullName","userImgUrl","user","localStorage","getItem","closeModal","imageUrl","hasPrev","findPrev","hasNext","findNext","e","artistIndex","postName","description","upvotes","Component","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { TiHeartOutline, TiHeartFullOutline } from \"react-icons/ti\";\nimport { deletePost, editPost } from \"../store/actions\";\n\nclass PostModal extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  componentDidMount() {}\n\n  render() {\n    console.log(this.props.src[\"userId\"]);\n    if (!this.props.src) {\n      console.log(\"whut\");\n      return null;\n    }\n    const parseUsers = () => {\n      return this.props.users.map(thing => ({\n        id: thing.id,\n        username: thing.username,\n        fullName: thing.fullName,\n        userImgUrl: thing.userImgUrl\n      }));\n    };\n    const user = localStorage.getItem(\"userId\");\n\n    return (\n      <div>\n        <div className=\"modal-overlay\" onClick={this.props.closeModal} />\n        <div isOpen={!!this.props.src.imageUrl} className=\"modal\">\n          <div className=\"modal-body\">\n            <a href=\"#\" className=\"modal-close\" onClick={this.props.closeModal}>\n              &times;\n            </a>\n            {this.props.hasPrev && (\n              <a href=\"#\" className=\"modal-prev\" onClick={this.props.findPrev}>\n                &lsaquo;\n              </a>\n            )}\n            {this.props.hasNext && (\n              <a href=\"#\" className=\"modal-next\" onClick={this.props.findNext}>\n                &rsaquo;\n              </a>\n            )}\n\n            <button onClick={e => this.props.deletePost(this.props.src.id)}>\n              Delete\n            </button>\n            {/* <button>Edit</button> */}\n\n            <img src={this.props.src.imageUrl} />\n          </div>\n          <span className=\"postInfoLine\">{this.artistIndex}</span>\n          <span className=\"postInfoLine\">{this.props.src.postName}</span>\n          <span className=\"postInfoLine\">{this.props.src.description}</span>\n          <span className=\"postInfoLine\">\n            {this.props.src.upvotes === 0 ? (\n              <TiHeartOutline />\n            ) : (\n              <TiHeartFullOutline />\n            )}\n            {`   ${this.props.src.upvotes} likes`}\n          </span>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  users: state.user.users,\n  user: state.user.user.id\n});\n\nexport default connect(\n  mapStateToProps,\n  { deletePost, editPost }\n)(PostModal);\n"]},"metadata":{},"sourceType":"module"}